<?php
/**
 * Created by PhpStorm.
 * User: programmer_5
 * Date: 21.11.2018
 * Time: 12:26
 */

namespace app\modules\api\models;

use app\models\filter\FilterDataTrait;
use app\models\FirmCultures;

class FirmsFilter extends Firms
{

    use FilterDataTrait;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @return array
     */
    public function rules()
    {
        return [
            [['square', 'processedSquare'], 'number'],
            [['name', 'rdpu', 'regionUID', 'pointUID', 'region.name','point.name','stringForSearchAll'], 'string', 'max' => 250],
            [['square|sort'],'sortValidate'],
            ['sender', 'integer'],
        ];
    }

    public function rulesFilter(){
        return [
            [['square','processedSquare'],'range',['>','=']],
            // [['processedSquare'],'processedSquare'],
            [['name','rdpu'],'andWhere',['like']],
            [['pointUID','regionUID','sender'],'andWhere',['=']],
            [['square|sort'],'sort'],
            [['stringForSearchAll'],'search',[['name', 'rdpu','region.name','point.name']]]
        ];
    }

    public function attributesAdd()
    {
        return ['region.name','point.name','stringForSearchAll','square|sort','processedSquare'];
    }

    public function attributesNameInQuery($attribute)
    {
        return [
            'square|sort' => 'square',
            'processedSquare' => '('.
                FirmCultures::find()->select('SUM(firmCultures.square)')
                    ->where('firmCultures.firmUID = firms.uid AND firmCultures.year = '.date('Y'))
                    ->createCommand()->getRawSql()
                .')',
        ];
    }

    public function getProcessedSquare(){
        return $this->processedSquare;
    }

    public function FilterQueryProcessedSquare(){
        $field = FirmCultures::find()->select('SUM(firmCultures.square)')
            ->where('firmCultures.firmUID = firms.uid AND firmCultures.year = '.date('Y'))
            ->createCommand()->getRawSql();
        $field = '('.$field.')';
        $this->getQuery()
            ->andWhere('@processedSquare = '.$field)
            ->andFilterWhere([
                'or',
                // ['@processedSquare = '.$field],
                ['>','@processedSquare',$this->getAttribute('processedSquare')],
                ['=','@processedSquare',$this->getAttribute('processedSquare')]
            ]);
    }

}
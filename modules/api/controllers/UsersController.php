<?php

namespace app\modules\api\controllers;

use app\models\Permissions;
use app\modules\api\models\Users;
use yii\filters\AccessControl;

class UsersController extends Controller
{

    /**
     * @return array
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors[] = [
            'class' => AccessControl::className(),
            'rules' => [
                [
                    'actions' => ['index','view'],
                    'allow' => true,
                    'roles' => ['users/view'],
                ],
                [
                    'actions' => ['update'],
                    'allow' => true,
                    'roles' => ['users/update'],
                ],
                [
                    'actions' => ['delete'],
                    'allow' => true,
                    'roles' => ['users/delete'],
                ],
                [
                    'actions' => ['create'],
                    'allow' => true,
                    'roles' => ['users/create'],
                ],
                [
                    'actions' => ['permissions'],
                    'allow' => true,
                    'roles' => ['@'],
                ]

            ],
        ];

        return $behaviors;
    }


    /**
     *
     */
    public function init()
    {
        $this->setResource(new Users());
        parent::init();
    }

    public function actionIndex(){
        parent::activeIndex(); // TODO: Change the autogenerated stub
    }

    public function actionView($id)
    {
        parent::activeView($id); // TODO: Change the autogenerated stub
    }

    public function actionCreate(){
        parent::activeCreate();
    }

    public function actionUpdate($id){
        $this->responseData = $this->resource->findOne($id);
        if ($this->responseData) {
            $this->responseData->attributes = $this->getRequestData();
            $this->responseData->save();
        }
        $this->setResponseParams(static::RESPONSE_PARAMS_SAVE);
    }

    public function actionDelete($id){
        parent::activeDelete($id);
    }

    public function actionPermissions(){
        $this->responseData = Permissions::getListRoles();
        $this->setResponseParams(static::RESPONSE_PARAMS_VIEW_DATA_ALL);
    }

}

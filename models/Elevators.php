<?php

namespace app\models;

use Yii;
use yii\db\ActiveQuery;

/**
 * This is the model class for table "elevators".
 *
 * @property int $id
 * @property string $uid
 * @property string $name
 * @property \yii\db\ActiveRecord[] $balanced
 */
class Elevators extends ActiveRecord
{

    public static $allInstances = null;

    public $addInstanceAfterSave = false;

    private $_balanced;


    public function setBalanced($balanced){
        if (is_array($balanced)){
            if ($this->uid){
                ElevatorsBalance::deleteAll(['elevatorUID'=>$this->uid]);
            }
            if ($balanced){
                $this->_balanced = $balanced;
            }
        }


    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'elevators';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['name'], 'string', 'max' => 250],
            ['balanced','safe']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'uid' => 'Uid',
            'name' => 'Name',
        ];
    }

    /**
     * @return array
     */
    public static function relations()
    {
        return ['balanced.culture'];
    }

    /**
     * @return array
     */
//    public function fields()
//    {
//        return array_merge(parent::fields(),['balanced','balancedSumm']);
//    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if (!$this->uid){
            $this->setUid();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($this->_balanced){
            foreach ($this->_balanced as $item){
                $object = new ElevatorsBalance();
                $object->attributes = $item;
                $object->elevatorUID = $this->uid;
                $object->save();
            }
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBalanced(){
        return $this->hasMany(ElevatorsBalance::className(),['elevatorUID'=>'uid']);
    }

    public function getBalancedSumm(){
        $result = [
            'balanceDeposited' => 0,
            'balanceZlata' => 0,
            'debit' => 0,
            'credit' => 0
        ];
        if ($this->balanced){
            foreach ($this->balanced as $instance){
                foreach ($result as $attribute=>$value){
                    $result[$attribute] += (float)$instance->$attribute;
                }
            }
        }
        return $result;
    }


    /**
     * @return array
     */
    public static function extraDataToSave(){
        return [
            'cultures' => Culture::find()->all()
        ];
    }

}
